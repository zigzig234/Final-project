name: CI/CD Pipeline with Monitoring

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-test:
    name: Linting and Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint Code
        run: flake8 app/

      - name: Run Unit Tests
        run: pytest tests/

  build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt-get install python3-pip
          python3 -m pip install requests ansible

      - name: Run Ansible Playbook to Build and Push Docker Image
        run: |
             ansible-playbook --vault-password-file <(echo ${{ secrets.VAULT_PASSWORD }}) -e @dockerhub_credentials.yml playbook.yml

  sast-scan:
    name: SAST Analysis
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Run OWASP Dependency-Check
        uses: dependency-check/gha@v2
        with:
          project: "MyApp"
          output-directory: dependency-check-report

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: dependency-check-report

      - name: Run CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: sast-scan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.0'

      - name: Apply Kubernetes Configuration
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml

  monitoring:
    name: Set Up Monitoring
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Apply Monitoring Configuration
        run: |
          kubectl apply -f monitoring/setup.yaml
