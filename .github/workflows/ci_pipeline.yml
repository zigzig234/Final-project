name: CI/CD Pipeline with Monitoring

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-test:
    name: Linting and Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint Code
        uses: davidanson/markdownlint-cli2-action@v1
        with:
          config_path: .markdownlint.json
          globs: '**/*.{md,markdown}'

      - name: Run Unit Tests
        run: pytest tests/

  sast-scan:
    name: SAST Analysis
    runs-on: ubuntu-latest
    needs: lint-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run gitleaks for secrets scanning
        uses: zricethezav/gitleaks-action@v1

      - name: Check if SONAR_TOKEN is set
        run: |
          if [ -z "${{ secrets.SONAR_TOKEN }}" ]; then
            echo "Error: SONAR_TOKEN is not set!"
            exit 1
          fi

      - name: Run SonarCloud SAST
        uses: SonarSource/sonarcloud-github-action@v3.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          args: >
            -Dsonar.projectKey=zigzig234_Final-project
            -Dsonar.organization=zigzig234
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}

      - name: Run Snyk for dependency security scan
        uses: snyk/actions/python@master
        with:
          args: --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: sast-scan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt-get install python3-pip
          python3 -m pip install requests ansible

      - name: Run Ansible Playbook to Build and Push Docker Image
        run: |
             ansible-playbook --vault-password-file <(echo ${{ secrets.VAULT_PASSWORD }}) -e @dockerhub_credentials.yml playbook.yml

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.26.0'
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Apply Kubernetes Configuration
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml

  monitoring:
    name: Set Up Monitoring
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Apply Monitoring Configuration
        run: |
          kubectl apply -f monitoring/setup.yaml
